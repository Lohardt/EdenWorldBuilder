#Mon May 06 12:51:56 PDT 2013
eclipse.preferences.version=1
problemStatement=CentaurCompanyDiv2.html
problemStatementXml=<?xml version\="1.0" encoding\="UTF-8"?> \n<java version\="1.6.0_37" class\="java.beans.XMLDecoder"> \n <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement"> \n  <void property\="className"> \n   <string>CentaurCompanyDiv2</string> \n  </void> \n  <void property\="contestName"> \n   <string>SRM 570 DIV 2 - 1000 points</string> \n  </void> \n  <void property\="htmlDescription"> \n   <string>&lt;html&gt;&lt;head&gt;&lt;title&gt;CentaurCompanyDiv2&lt;/title&gt;&lt;/head&gt;&lt;body bgcolor\=&quot;\#000000&quot; text\=&quot;\#ffffff&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Problem Statement&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;p&gt;The Centaur company has N servers, numbered 1 through N.\nThese servers are currently connected into a network.\nThe topology of the network is a tree.\nIn other words, there are exactly N-1 bidirectional cables, each connecting some two servers in such a way that the entire network is connected.&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;The Centaur company is about to split into two new companies\: the Human company and the Horse company.\nWhen this happens, the companies will divide the servers somehow.\nOnce they divide their servers, they will cut each cable that connects a server of the Horse company and a server of the Human company.&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;While the Horse company has a lot of cables, the Human company does not have any.\nTherefore, when dividing the servers, the Human company must get a set of servers that will remain connected after the cables are cut.&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;You are given two int[]s &lt;b&gt;a&lt;/b&gt; and &lt;b&gt;b&lt;/b&gt;, each containing N-1 elements.\nThese two arrays describe the original cables\:\nfor each i, there is a cable that connects the servers &lt;b&gt;a&lt;/b&gt;[i] and &lt;b&gt;b&lt;/b&gt;[i].&lt;/p&gt;\n&lt;br&gt;&lt;/br&gt;\n&lt;p&gt;Compute and return the number of different ways in which the two companies may divide the servers.\n(It is possible that one of the companies will get no servers at all.)&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Definition&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;Class\:&lt;/td&gt;&lt;td&gt;CentaurCompanyDiv2&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method\:&lt;/td&gt;&lt;td&gt;count&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Parameters\:&lt;/td&gt;&lt;td&gt;int[], int[]&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Returns\:&lt;/td&gt;&lt;td&gt;long&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;Method signature\:&lt;/td&gt;&lt;td&gt;long count(int[] a, int[] b)&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;(be sure your method is public)&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Notes&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;N can be determined as (1 + the length of &lt;b&gt;a&lt;/b&gt;).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Constraints&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;N will be between 2 and 51, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;&lt;b&gt;a&lt;/b&gt; and &lt;b&gt;b&lt;/b&gt; will contain exactly N-1 elements.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;Each element of &lt;b&gt;a&lt;/b&gt; and &lt;b&gt;b&lt;/b&gt; will be between 1 and N, inclusive.&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; valign\=&quot;top&quot;&gt;-&lt;/td&gt;&lt;td&gt;The network defined by &lt;b&gt;a&lt;/b&gt; and &lt;b&gt;b&lt;/b&gt; will be a tree (as explained in the problem statement).&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;h3&gt;Examples&lt;/h3&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;0)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{2}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;There are 2^2 \= 4 ways to divide the servers between two companies. For any division, the Human company&apos;s servers will remain connected.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;1)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{2,2}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1,3}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 7&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;There are 2^3 \= 8 ways to divide the servers between two companies. However, if the Human company gets server 1 and server 3, and the Horse company gets server 2, the Human company&apos;s servers will not be connected. Therefore the number of valid ways is 8 - 1 \= 7.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;2)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1,2,3,4,5,6,7,8,9}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{2,3,4,5,6,7,8,9,10}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 56&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;3)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 1125899906842675&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;The answer overflows a 32-bit integer data type.&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td align\=&quot;center&quot; nowrap\=&quot;true&quot;&gt;4)&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&amp;\#160;&amp;\#160;&amp;\#160;&amp;\#160;&lt;/td&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{10, 7, 2, 5, 6, 2, 4, 9, 7}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;{8, 10, 10, 4, 1, 6, 2, 2, 3}&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;pre&gt;Returns\: 144&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;table&gt;&lt;tr&gt;&lt;td colspan\=&quot;2&quot;&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;p&gt;This problem statement is the exclusive and proprietary property of TopCoder, Inc.  Any unauthorized use or reproduction of this information without the prior written consent of TopCoder, Inc. is strictly prohibited.  (c)2003, TopCoder, Inc.  All rights reserved.  &lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</string> \n  </void> \n  <void property\="methodName"> \n   <string>count</string> \n  </void> \n  <void property\="parameterNames"> \n   <void method\="add"> \n    <string>a</string> \n   </void> \n   <void method\="add"> \n    <string>b</string> \n   </void> \n  </void> \n  <void property\="parameterTypes"> \n   <void method\="add"> \n    <class>[Ljava.lang.Integer;</class> \n   </void> \n   <void method\="add"> \n    <class>[Ljava.lang.Integer;</class> \n   </void> \n  </void> \n  <void property\="returnType"> \n   <class>java.lang.Long</class> \n  </void> \n  <void property\="testCases"> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="2"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="1"> \n         <void index\="0"> \n          <int>1</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="1"> \n         <void index\="0"> \n          <int>2</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <long>4</long> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="2"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="2"> \n         <void index\="0"> \n          <int>2</int> \n         </void> \n         <void index\="1"> \n          <int>2</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="2"> \n         <void index\="0"> \n          <int>1</int> \n         </void> \n         <void index\="1"> \n          <int>3</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <long>7</long> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="2"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="9"> \n         <void index\="0"> \n          <int>1</int> \n         </void> \n         <void index\="1"> \n          <int>2</int> \n         </void> \n         <void index\="2"> \n          <int>3</int> \n         </void> \n         <void index\="3"> \n          <int>4</int> \n         </void> \n         <void index\="4"> \n          <int>5</int> \n         </void> \n         <void index\="5"> \n          <int>6</int> \n         </void> \n         <void index\="6"> \n          <int>7</int> \n         </void> \n         <void index\="7"> \n          <int>8</int> \n         </void> \n         <void index\="8"> \n          <int>9</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="9"> \n         <void index\="0"> \n          <int>2</int> \n         </void> \n         <void index\="1"> \n          <int>3</int> \n         </void> \n         <void index\="2"> \n          <int>4</int> \n         </void> \n         <void index\="3"> \n          <int>5</int> \n         </void> \n         <void index\="4"> \n          <int>6</int> \n         </void> \n         <void index\="5"> \n          <int>7</int> \n         </void> \n         <void index\="6"> \n          <int>8</int> \n         </void> \n         <void index\="7"> \n          <int>9</int> \n         </void> \n         <void index\="8"> \n          <int>10</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <long>56</long> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="2"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="50"> \n         <void index\="0"> \n          <int>1</int> \n         </void> \n         <void index\="1"> \n          <int>1</int> \n         </void> \n         <void index\="2"> \n          <int>1</int> \n         </void> \n         <void index\="3"> \n          <int>1</int> \n         </void> \n         <void index\="4"> \n          <int>1</int> \n         </void> \n         <void index\="5"> \n          <int>1</int> \n         </void> \n         <void index\="6"> \n          <int>1</int> \n         </void> \n         <void index\="7"> \n          <int>1</int> \n         </void> \n         <void index\="8"> \n          <int>1</int> \n         </void> \n         <void index\="9"> \n          <int>1</int> \n         </void> \n         <void index\="10"> \n          <int>1</int> \n         </void> \n         <void index\="11"> \n          <int>1</int> \n         </void> \n         <void index\="12"> \n          <int>1</int> \n         </void> \n         <void index\="13"> \n          <int>1</int> \n         </void> \n         <void index\="14"> \n          <int>1</int> \n         </void> \n         <void index\="15"> \n          <int>1</int> \n         </void> \n         <void index\="16"> \n          <int>1</int> \n         </void> \n         <void index\="17"> \n          <int>1</int> \n         </void> \n         <void index\="18"> \n          <int>1</int> \n         </void> \n         <void index\="19"> \n          <int>1</int> \n         </void> \n         <void index\="20"> \n          <int>1</int> \n         </void> \n         <void index\="21"> \n          <int>1</int> \n         </void> \n         <void index\="22"> \n          <int>1</int> \n         </void> \n         <void index\="23"> \n          <int>1</int> \n         </void> \n         <void index\="24"> \n          <int>1</int> \n         </void> \n         <void index\="25"> \n          <int>1</int> \n         </void> \n         <void index\="26"> \n          <int>1</int> \n         </void> \n         <void index\="27"> \n          <int>1</int> \n         </void> \n         <void index\="28"> \n          <int>1</int> \n         </void> \n         <void index\="29"> \n          <int>1</int> \n         </void> \n         <void index\="30"> \n          <int>1</int> \n         </void> \n         <void index\="31"> \n          <int>1</int> \n         </void> \n         <void index\="32"> \n          <int>1</int> \n         </void> \n         <void index\="33"> \n          <int>1</int> \n         </void> \n         <void index\="34"> \n          <int>1</int> \n         </void> \n         <void index\="35"> \n          <int>1</int> \n         </void> \n         <void index\="36"> \n          <int>1</int> \n         </void> \n         <void index\="37"> \n          <int>1</int> \n         </void> \n         <void index\="38"> \n          <int>1</int> \n         </void> \n         <void index\="39"> \n          <int>1</int> \n         </void> \n         <void index\="40"> \n          <int>1</int> \n         </void> \n         <void index\="41"> \n          <int>1</int> \n         </void> \n         <void index\="42"> \n          <int>1</int> \n         </void> \n         <void index\="43"> \n          <int>1</int> \n         </void> \n         <void index\="44"> \n          <int>1</int> \n         </void> \n         <void index\="45"> \n          <int>1</int> \n         </void> \n         <void index\="46"> \n          <int>1</int> \n         </void> \n         <void index\="47"> \n          <int>1</int> \n         </void> \n         <void index\="48"> \n          <int>1</int> \n         </void> \n         <void index\="49"> \n          <int>1</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="50"> \n         <void index\="0"> \n          <int>2</int> \n         </void> \n         <void index\="1"> \n          <int>3</int> \n         </void> \n         <void index\="2"> \n          <int>4</int> \n         </void> \n         <void index\="3"> \n          <int>5</int> \n         </void> \n         <void index\="4"> \n          <int>6</int> \n         </void> \n         <void index\="5"> \n          <int>7</int> \n         </void> \n         <void index\="6"> \n          <int>8</int> \n         </void> \n         <void index\="7"> \n          <int>9</int> \n         </void> \n         <void index\="8"> \n          <int>10</int> \n         </void> \n         <void index\="9"> \n          <int>11</int> \n         </void> \n         <void index\="10"> \n          <int>12</int> \n         </void> \n         <void index\="11"> \n          <int>13</int> \n         </void> \n         <void index\="12"> \n          <int>14</int> \n         </void> \n         <void index\="13"> \n          <int>15</int> \n         </void> \n         <void index\="14"> \n          <int>16</int> \n         </void> \n         <void index\="15"> \n          <int>17</int> \n         </void> \n         <void index\="16"> \n          <int>18</int> \n         </void> \n         <void index\="17"> \n          <int>19</int> \n         </void> \n         <void index\="18"> \n          <int>20</int> \n         </void> \n         <void index\="19"> \n          <int>21</int> \n         </void> \n         <void index\="20"> \n          <int>22</int> \n         </void> \n         <void index\="21"> \n          <int>23</int> \n         </void> \n         <void index\="22"> \n          <int>24</int> \n         </void> \n         <void index\="23"> \n          <int>25</int> \n         </void> \n         <void index\="24"> \n          <int>26</int> \n         </void> \n         <void index\="25"> \n          <int>27</int> \n         </void> \n         <void index\="26"> \n          <int>28</int> \n         </void> \n         <void index\="27"> \n          <int>29</int> \n         </void> \n         <void index\="28"> \n          <int>30</int> \n         </void> \n         <void index\="29"> \n          <int>31</int> \n         </void> \n         <void index\="30"> \n          <int>32</int> \n         </void> \n         <void index\="31"> \n          <int>33</int> \n         </void> \n         <void index\="32"> \n          <int>34</int> \n         </void> \n         <void index\="33"> \n          <int>35</int> \n         </void> \n         <void index\="34"> \n          <int>36</int> \n         </void> \n         <void index\="35"> \n          <int>37</int> \n         </void> \n         <void index\="36"> \n          <int>38</int> \n         </void> \n         <void index\="37"> \n          <int>39</int> \n         </void> \n         <void index\="38"> \n          <int>40</int> \n         </void> \n         <void index\="39"> \n          <int>41</int> \n         </void> \n         <void index\="40"> \n          <int>42</int> \n         </void> \n         <void index\="41"> \n          <int>43</int> \n         </void> \n         <void index\="42"> \n          <int>44</int> \n         </void> \n         <void index\="43"> \n          <int>45</int> \n         </void> \n         <void index\="44"> \n          <int>46</int> \n         </void> \n         <void index\="45"> \n          <int>47</int> \n         </void> \n         <void index\="46"> \n          <int>48</int> \n         </void> \n         <void index\="47"> \n          <int>49</int> \n         </void> \n         <void index\="48"> \n          <int>50</int> \n         </void> \n         <void index\="49"> \n          <int>51</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <long>1125899906842675</long> \n     </void> \n    </object> \n   </void> \n   <void method\="add"> \n    <object class\="net.fornwall.eclipsecoder.stats.ProblemStatement$TestCase"> \n     <void property\="parameters"> \n      <array class\="java.lang.Object" length\="2"> \n       <void index\="0"> \n        <array class\="java.lang.Integer" length\="9"> \n         <void index\="0"> \n          <int>10</int> \n         </void> \n         <void index\="1"> \n          <int>7</int> \n         </void> \n         <void index\="2"> \n          <int>2</int> \n         </void> \n         <void index\="3"> \n          <int>5</int> \n         </void> \n         <void index\="4"> \n          <int>6</int> \n         </void> \n         <void index\="5"> \n          <int>2</int> \n         </void> \n         <void index\="6"> \n          <int>4</int> \n         </void> \n         <void index\="7"> \n          <int>9</int> \n         </void> \n         <void index\="8"> \n          <int>7</int> \n         </void> \n        </array> \n       </void> \n       <void index\="1"> \n        <array class\="java.lang.Integer" length\="9"> \n         <void index\="0"> \n          <int>8</int> \n         </void> \n         <void index\="1"> \n          <int>10</int> \n         </void> \n         <void index\="2"> \n          <int>10</int> \n         </void> \n         <void index\="3"> \n          <int>4</int> \n         </void> \n         <void index\="4"> \n          <int>1</int> \n         </void> \n         <void index\="5"> \n          <int>6</int> \n         </void> \n         <void index\="6"> \n          <int>2</int> \n         </void> \n         <void index\="7"> \n          <int>2</int> \n         </void> \n         <void index\="8"> \n          <int>3</int> \n         </void> \n        </array> \n       </void> \n      </array> \n     </void> \n     <void property\="returnValue"> \n      <long>144</long> \n     </void> \n    </object> \n   </void> \n  </void> \n </object> \n</java> \n
